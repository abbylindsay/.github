name: "Build and test develop manually"

on:
  workflow_dispatch:
#  push:
#    branches:
#      - develop

jobs:
  develop-release:
    name: Publish develop release
    runs-on: ubuntu-latest
    env:
      # TODO add all required environment variables
      keyStoreFile: ${{ secrets.ANDROID_KEYSTORE_FILE }}
      keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      keyAlias: ${{ secrets.ANDROID_KEY_ALIAS }}
      keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
      mailgunApiKey: ${{ secrets.MAILGUN_API_KEY }}

    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop
          token: ${{ secrets.ROBOT_PERSONAL_ACCESS_TOKEN }}
          submodules: recursive
      - name: GitHub Slug
        uses: rlespinasse/github-slug-action@3.2.0
      - uses: borales/actions-yarn@v2.0.0

      - name: Date
        run: |
          echo "DATE_STR=$(date +%Y.%m.%d_%H.%M)" >> $GITHUB_ENV

      - name: Update Release Version
        run: echo "RELEASE_VERSION=develop-${DATE_STR}-${GITHUB_SHA_SHORT}" >> $GITHUB_ENV

      - name: Cache dependencies
        id: cache_dependencies
        uses: actions/cache@v2
        with:
          # TODO: Dependency paths go here
          path: |
            ~/.gradle/wrapper/
            ./build/intermediates/lint-cache
            ./webapp/node_modules
            ~/.gradle/caches
            ~/.m2/repository
            node_modules
          key: dependencies-${{ github.sha }}

      - name: Cache build
        id: cache_release_build
        uses: actions/cache@v2
        with:
          # TODO: Build output paths go here
          path: |
            ./app/main/assets
          key: develop-build-${{ github.sha }}

      - name: Bump version
        uses: ./.github/actions/bump-version
        with:
          new-version: ${{ env.RELEASE_VERSION }}

      - name: Build
        if: steps.cache_release_build.outputs.cache-hit != 'true'
        uses: ./.github/actions/build

      - name: Test
        uses: ./.github/actions/test

      - name: Package Nightly Release
        id: package
        uses: ./.github/actions/package-nightly

      - name: Create Nightly Release
        id: create_release
        uses: thomaseizinger/create-release@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target_commitish: ${{ github.sha }}
          tag_name: ${{ env.RELEASE_VERSION }}
          name: Develop ${{ env.DATE_STR }}
          draft: false
          prerelease: true

      - run: echo "ASSET_NAME=$(basename $ASSET_PATH)" >> $GITHUB_ENV
        env:
          ASSET_PATH: ${{ steps.package.outputs.asset_path }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ROBOT_PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.package.outputs.asset_path }}
          asset_name: ${{ env.ASSET_NAME }}
          asset_content_type: application/octet-stream

#      Skip nightly deploy for develop builds
#      - name: Deploy release
#        uses: ./.github/actions/deploy-nightly
