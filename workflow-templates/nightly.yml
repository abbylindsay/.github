name: "Nightly build and testing"

on:
  schedule:
    - cron: 0 23 * * *


jobs:
  check-for-previous:
    name: Check for previous nightly tag
    runs-on: ubuntu-latest
    outputs:
      previous-nightly: ${{ steps.check.outputs.previous-nightly }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop
          token: ${{ secrets.ROBOT_PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0
      - id: check
        run: git describe --tags --exact-match --match nightly-* && echo "::set-output name=previous-nightly::true" || echo "::set-output name=previous-nightly::false"

  nightly-release:
    name: Publish nightly release
    needs: check-for-previous
    if: ${{ needs.check-for-previous.outputs.previous-nightly != 'true' }}
    runs-on: ubuntu-latest
    env:
      # TODO add all required environment variables

    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop
          token: ${{ secrets.ROBOT_PERSONAL_ACCESS_TOKEN }}
          submodules: recursive
          fetch-depth: 0
      - name: GitHub Slug
        uses: rlespinasse/github-slug-action@2.1.0

      # TODO replace this with actions for setting up project build environment
      - uses: borales/actions-yarn@v2.0.0

      - name: Date
        run: |
          echo "DATE_STR=$(date +%Y.%m.%d)" >> $GITHUB_ENV

      - name: Update Release Version
        run: echo "RELEASE_VERSION=nightly-${DATE_STR}" >> $GITHUB_ENV

      - name: Cache dependencies
        id: cache_dependencies
        uses: actions/cache@v2
        with:
          # TODO: Dependency paths go here
          path: |
            ~/example/path
          key: dependencies-${{ github.sha }}

      - name: Cache build
        id: cache_release_build
        uses: actions/cache@v2
        with:
          # TODO: Build output paths go here
          path: |
            ~/example/path
          key: nightly-build-${{ github.sha }}

      - name: Bump version
        uses: ./.github/actions/bump-version
        with:
          new-version: ${{ env.RELEASE_VERSION }}

      - name: Build
        if: steps.cache_release_build.outputs.cache-hit != 'true'
        uses: ./.github/actions/build

      - name: Test
        uses: ./.github/actions/test

      - name: Package Nightly Release
        id: package
        uses: ./.github/actions/package-nightly

      - name: Create Nightly Release
        id: create_release
        uses: thomaseizinger/create-release@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.ROBOT_PERSONAL_ACCESS_TOKEN }}
        with:
          target_commitish: ${{ github.sha }}
          tag_name: ${{ env.RELEASE_VERSION }}
          name: Nightly ${{ env.DATE_STR }}
          draft: false
          prerelease: true

      - run: echo "ASSET_NAME=$(basename $ASSET_PATH)" >> $GITHUB_ENV
        env:
          ASSET_PATH: ${{ steps.package.outputs.asset_path }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ROBOT_PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.package.outputs.asset_path }}
          asset_name: ${{ env.ASSET_NAME }}
          asset_content_type: application/octet-stream

      - name: Deploy release
        uses: ./.github/actions/deploy-nightly
